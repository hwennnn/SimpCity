name: SimpCity CD for Delivery

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: "3.10"

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f test_requirements.txt ]; then pip install -r test_requirements.txt; fi
        
    - name: Linter Check with Flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics    
        
    - name: Begin Test with Pytest
      run: |
        cd test; pytest --cov -v --junitxml=report.xml
    - if: ${{failure()}}       
      name: Create Issues
      uses: nashmaniac/create-issue-action@v1.1
      with:
          title: Build Failed for CD
          token: ${{secrets.GITHUB_TOKEN}}
          assignees: ${{github.actor}}
          labels: worflow-failed
          body: Workflow failed for commit ${{github.sha}} @ ${{github.ref}}       

    - name: Publish Unit Test Results
      uses: EnricoMi/publish-unit-test-result-action@v1.24
      if: always()
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        files: test/report.xml

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v2
      with: 
        fetch-depth: 0

    - name: Remove Test Folder
      run: rm -r "test"

    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: "3.10"

    - name: Set environment variables for version number
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

    - name: Download changelog
      run: |
        npm install -g git-changelog

    - name: Set previous tag
      run: |
        git describe --abbrev=0 --tags `git rev-list --tags --skip=1 --max-count=1`
        echo "::set-output name=TAG_NAME::$(git describe --abbrev=0 --tags `git rev-list --tags --skip=1 --max-count=1`)"
      id: previoustag
    
    - name: Run changelog
      run: |
        git-changelog -t ${{ steps.previoustag.outputs.TAG_NAME  }} -a "simpcity"

    - name: Create Download Directory
      run: mkdir downloads

    - name: Create docs
      run: |
        python -m pydoc -w ./
        mv *.html ./downloads

    - name: upload documents
      uses: actions/upload-artifact@v2
      with:
        name: assetDocuments
        path: downloads

    - name: Download Content
      uses: actions/download-artifact@v2
      with:
        name: assetDocuments
               
    - name: Create GitHub release
      id: create-new-release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.RELEASE_VERSION }}
        release_name: Release ${{ env.RELEASE_VERSION }}  
        body_path: ./CHANGELOG.md

    - name: Archive site content
      uses: thedoctor0/zip-release@master
      with:
        filename: content.zip

    - name: Upload release asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create-new-release.outputs.upload_url }}
        asset_path: ./content.zip
        asset_name: ${{ env.RELEASE_VERSION }}.zip
        asset_content_type: application/zip
    
    - name: Create release branch
      uses: peterjgrainger/action-create-branch@v2.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        branch: release-${{ env.RELEASE_VERSION }}