name: SimpCity CI on Pull Request Events

on: 
  pull_request:
    branches: ["development", "QA", "stable"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: "3.10"
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f test_requirements.txt ]; then pip install -r test_requirements.txt; fi
        
    - name: Linter Check with Flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        echo "FLAKE8COMMENTS=$(flake8 . --quiet --quiet --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics)" >> $GITHUB_ENV

    - name: Find Flake8 Comment
      uses: peter-evans/find-comment@v1
      id: fc
      with:
        issue-number: ${{ github.event.pull_request.number }}
        comment-author: 'github-actions[bot]'
        body-includes: Please refer to GitHub Actions Pull Request Log for full linter check

    - name: Create Flake8 comment
      if: steps.fc.outputs.comment-id == ''
      uses: peter-evans/create-or-update-comment@v1
      with:
        issue-number: ${{ github.event.pull_request.number }}
        body: |
          **${{ env.FLAKE8COMMENTS }} Suspicious and Non-Structural Code Identified with Flake8.**
          ---------------------------------------------------------------
          Please refer to GitHub Actions Pull Request Log for full linter check

    - name: Update Flake8 comment
      if: steps.fc.outputs.comment-id != ''
      uses: jungwinter/comment@v1
      with:
        type: edit
        body: |
          **${{ env.FLAKE8COMMENTS }} Suspicious and Non-Structural Code Identified with Flake8.**
          ---------------------------------------------------------------
          Please refer to GitHub Actions Pull Request Log for full linter check
        comment_id: ${{ steps.fc.outputs.comment-id }}
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Label the PR Size
      uses: coverwallet/pr-labeler@v1.2.1
      with:
          xs_max_size: '10'
          s_max_size: '100'
          m_max_size: '500'
          l_max_size: '1000'
          exclude_files: '.txt'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        
    - name: Begin Test with Pytest and Build coverage file
      run: |
        cd test; pytest --cache-clear --cov -v --cov=SimpCity --junitxml=report.xml > pytest-coverage.txt 

    - name: Comment coverage
      uses: coroo/pytest-coverage-commentator@v1.0.2
      with:
        pytest-coverage: ./test/pytest-coverage.txt
        
    - if: ${{failure()}}       
      name: Create Issues
      uses: nashmaniac/create-issue-action@v1.1
      with:
          title: Build Failed for CI on Pull Request Events
          token: ${{secrets.GITHUB_TOKEN}}
          assignees: ${{github.actor}}
          labels: worflow-failed
          body: Workflow failed for commit ${{github.sha}} @ ${{github.ref}}     

    - name: Begin Black-Box Tests with Pytest
      run: |
        cd test; pytest blackBox_test.py -rP | tee output.txt; python3 output.py; pytest regression_test.py -vv

    - name: Publish Unit Test Results
      uses: EnricoMi/publish-unit-test-result-action@v1.24
      if: always()
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        files: test/report.xml
